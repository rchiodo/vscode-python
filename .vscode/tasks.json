{
    "version": "2.0.0",
    "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
    },
    "tasks": [
        {
            "label": "Compile",
            "type": "npm",
            "script": "compile",
            "isBackground": true,
            "problemMatcher": [
                "$tsc-watch",
                {
                    "base": "$tslint5",
                    "fileLocation": "relative"
                }
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Run Unit Tests",
            "type": "npm",
            "script": "test:unittests",
            "group": {
                "kind": "test",
                "isDefault": true
            }
        },
        {
            "label": "Hygiene",
            "type": "gulp",
            "task": "watch",
            "isBackground": true,
            "presentation": {
                "echo": true,
                "reveal": "never",
                "focus": false,
                "panel": "dedicated"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": []
        },
        {
            "type": "shell",
            "command": "webpack -w --config webpack.config.js",
            "label": "Webpack (Dev, Continuous)",
            "group": "build",
            "promptOnClose": true,
            "isBackground": true,
            "problemMatcher": {
                "owner": "Webpack (Dev, Continuous)",
                "severity": "error",
                "fileLocation": "absolute",
                "source": "webpack-typescript",
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": "Type checking and linting in progress...",
                    "endsPattern": "Time: (\\d+)ms"
                },
                "pattern": [
                    {
                        "regexp": "ERROR in ([^\\(]*)\\((\\d+),(\\d+)\\):",
                        "file": 1,
                        "line": 2,
                        "column": 3
                    },
                    {
                        "regexp": "([A-Za-z0-9-]+):(.*)",
                        "message": 2,
                        "code": 1
                    }
                ]
            }
        },    
        {
            // Use this to run hygiene and display errors in problems window (very slow on Windows)
            "label": "Hygiene (Problems Window)",
            "type": "gulp",
            "task": "watchProblems",
            "isBackground": true,
            "presentation": {
                "echo": true,
                "reveal": "never",
                "focus": false,
                "panel": "dedicated"
            },
            "problemMatcher": [
                {
                    "applyTo": "allDocuments",
                    "fileLocation": "relative",
                    "background": {
                        "beginsPattern": {
                            "regexp": "^Hygiene started"
                        },
                        "endsPattern": {
                            "regexp": "^(Hygiene failed with errors|Hygiene passed with 0 errors)"
                        }
                    },
                    "pattern": [
                        {
                            "regexp": "^([^\\s].*)\\((\\d+|\\d+,\\d+|\\d+,\\d+,\\d+,\\d+)\\):\\s+(error|warning|info)\\s+(TS\\d+)\\s*:\\s*(.*)$",
                            "file": 1,
                            "location": 2,
                            "severity": 3,
                            "code": 4,
                            "message": 5
                        }
                    ]
                },
                {
                    "applyTo": "allDocuments",
                    "fileLocation": "relative",
                    "background": {
                        "beginsPattern": {
                            "regexp": "^Hygiene started"
                        },
                        "endsPattern": {
                            "regexp": "^(Hygiene failed with errors|Hygiene passed with 0 errors)"
                        }
                    },
                    "pattern": [
                        {
                            "regexp": "^(WARNING|ERROR):(\\s+\\(\\S*\\))?\\s+(\\S.*)\\[(\\d+), (\\d+)\\]:\\s+(.*)$",
                            "severity": 1,
                            "file": 3,
                            "line": 4,
                            "column": 5,
                            "message": 6
                        }
                    ]
                }
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        }
    ]
}
